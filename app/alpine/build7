#!/bin/bash

# docker run --rm -it -v /tmp/php7-build:/tmp -v /root/build:/build -v $PWD/app/alpine:/app genee/phpize build7

PHP_VERSION_ID=$(echo "<?= PHP_MAJOR_VERSION.'.'.PHP_MINOR_VERSION ?>"|php7)
BUILD_DIR=/build/alpine/php-$PHP_VERSION_ID

mkdir -p $BUILD_DIR

MODULE="$1"

# build redis
if [ -z "$MODULE" ] || [ "$MODULE" == "redis" ] ; then
    apk add php7-session
    [ ! -d /tmp/phpredis ] && git clone https://github.com/phpredis/phpredis.git /tmp/phpredis
    cd /tmp/phpredis && git reset --hard && git checkout master && git pull --rebase --autostash && git checkout 4.0.2 \
        && phpize7 && ./configure --with-php-config=/usr/bin/php-config7 && make && make install && \
        cp /usr/lib/php7/modules/redis.so $BUILD_DIR
fi

# build yaml
if [ -z "$MODULE" ] || [ "$MODULE" == "yaml" ] ; then
    apk add yaml-dev
    [ ! -d /tmp/yaml ] && git clone https://github.com/php/pecl-file_formats-yaml.git /tmp/yaml
    cd /tmp/yaml && git reset --hard && git checkout master && git pull --rebase --autostash && git checkout 2.0.2 \
        && phpize7 && ./configure --with-php-config=/usr/bin/php-config7 && make && make install && \
        cp /usr/lib/php7/modules/yaml.so $BUILD_DIR
fi

# build zmq
if [ -z "$MODULE" ] || [ "$MODULE" == "zmq" ] ; then
    apk add zeromq-dev
    [ ! -d /tmp/zmq ] && git clone https://github.com/mkoppanen/php-zmq.git /tmp/zmq
    cd /tmp/zmq && git reset --hard && git checkout master && git pull --rebase --autostash && git checkout php7 \
        && phpize7 && ./configure --with-php-config=/usr/bin/php-config7 && make && make install && \
        cp /usr/lib/php7/modules/zmq.so $BUILD_DIR
fi

# build uopz
if [ -z "$MODULE" ] || [ "$MODULE" == "uopz" ] ; then
    [ ! -d /tmp/uopz ] && git clone https://github.com/krakjoe/uopz.git /tmp/uopz
    cd /tmp/uopz && git reset --hard && git checkout master && git pull --rebase --autostash && git checkout v6.0.1 \
    && phpize7 && ./configure --with-php-config=/usr/bin/php-config7 --enable-uopz && make && make install && \
    cp /usr/lib/php7/modules/uopz.so $BUILD_DIR
fi

# build xdebug
if [ -z "$MODULE" ] || [ "$MODULE" == "xdebug" ] ; then
    [ ! -d /tmp/xdebug ] && git clone https://github.com/xdebug/xdebug.git /tmp/xdebug
    cd /tmp/xdebug && git reset --hard && git checkout master && git pull --rebase --autostash && git checkout XDEBUG_2_5_5 \
        && phpize7 && ./configure --with-php-config=/usr/bin/php-config7 \
        && make && make install && cp /usr/lib/php7/modules/xdebug.so $BUILD_DIR
fi

# build friso
if [ -z "$MODULE" ] || [ "$MODULE" == "friso" ] ; then
    [ ! -d /tmp/friso ] && git clone https://git.oschina.net/lionsoul/friso.git /tmp/friso
    cd /tmp/friso/src && git reset --hard && git checkout master && git pull --rebase --autostash \
        && make && make install && cp /usr/lib/libfriso.so $BUILD_DIR
    ldconfig
    cd /tmp/friso/vendors/binding/php7 \
        && phpize7 && ./configure --with-php-config=/usr/bin/php-config7 \
        && make && make install && cp /usr/lib/php7/modules/friso.so $BUILD_DIR
fi

# build swoole
if [ -z "$MODULE" ] || [ "$MODULE" == "swoole" ] ; then
    apk add linux-headers
    [ ! -d /tmp/swoole ] && git clone https://github.com/swoole/swoole-src.git /tmp/swoole
    cd /tmp/swoole && git reset --hard && git checkout master && git pull --rebase --autostash \
        && phpize7 && ./configure --with-php-config=/usr/bin/php-config7 \
        && make && make install && cp /usr/lib/php7/modules/swoole.so $BUILD_DIR
fi